diff --git a/1.1/sd-api/src/main/java/com/cisco/oss/foundation/directory/LookupManager.java b/1.1/sd-api/src/main/java/com/cisco/oss/foundation/directory/LookupManager.java
index 3b61e37..4ee4b8c 100644
--- a/1.1/sd-api/src/main/java/com/cisco/oss/foundation/directory/LookupManager.java
+++ b/1.1/sd-api/src/main/java/com/cisco/oss/foundation/directory/LookupManager.java
@@ -177,8 +177,8 @@ public interface LookupManager {
     /**
      * Add a NotificationHandler to the Service.
      *
-     * This method can check the duplicate NotificationHandler for the serviceName, if the NotificationHandler
-     * already exists in the serviceName, do nothing.
+     * This method can check the duplicated NotificationHandler for the serviceName, if the NotificationHandler
+     * already exists for the serviceName, do nothing.
      *
      * Throw IllegalArgumentException if serviceName or handler is null.
      *
@@ -191,7 +191,7 @@ public interface LookupManager {
     public void addNotificationHandler(String serviceName, NotificationHandler handler) throws ServiceException;
 
     /**
-     * Remove the NotificationHandler from the Service.
+     * Remove a NotificationHandler from the Service.
      *
      * Throw IllegalArgumentException if serviceName or handler is null.
      *
diff --git a/1.1/sd-api/src/main/java/com/cisco/oss/foundation/directory/RegistrationManager.java b/1.1/sd-api/src/main/java/com/cisco/oss/foundation/directory/RegistrationManager.java
index 4077891..4f87f96 100644
--- a/1.1/sd-api/src/main/java/com/cisco/oss/foundation/directory/RegistrationManager.java
+++ b/1.1/sd-api/src/main/java/com/cisco/oss/foundation/directory/RegistrationManager.java
@@ -61,7 +61,7 @@ public interface RegistrationManager {
      *
      * It is a convenient method to update the OperationalStatus of the ProvidedServiceInstance.
      *
-     * @param serviceName    The name of the service.
+     * @param serviceName   The name of the service.
      * @param providerId    The providerId of the ProvidedServiceInstance.
      * @param status        The OperationalStatus of the ProvidedServiceInstance.
      * @throws ServiceException
@@ -73,9 +73,9 @@ public interface RegistrationManager {
      *
      * It is a convenient method to update the URI of the ProvidedServiceInstance.
      *
-     * @param serviceName    The name of the service.
+     * @param serviceName   The name of the service.
      * @param providerId    The providerId of the ProvidedServiceInstance.
-     * @param uri        The URI of the ProvidedServiceInstance.
+     * @param uri           The URI of the ProvidedServiceInstance.
      * @throws ServiceException
      */
     public void updateServiceUri(String serviceName, String providerId, String uri) throws ServiceException;
@@ -98,7 +98,7 @@ public interface RegistrationManager {
      * Unregister the existing ProvidedServiceInstance in the directory server.
      *
      * @param serviceName    The name of the Service.
-     * @param providerId    The providerId of ProvidedServiceInstance.
+     * @param providerId     The providerId of ProvidedServiceInstance.
      * @throws ServiceException
      */
     public void unregisterService(String serviceName, String providerId) throws ServiceException;
diff --git a/1.1/sd-api/src/main/java/com/cisco/oss/foundation/directory/ServiceDirectory.java b/1.1/sd-api/src/main/java/com/cisco/oss/foundation/directory/ServiceDirectory.java
index 35e3b49..55f9d0d 100644
--- a/1.1/sd-api/src/main/java/com/cisco/oss/foundation/directory/ServiceDirectory.java
+++ b/1.1/sd-api/src/main/java/com/cisco/oss/foundation/directory/ServiceDirectory.java
@@ -109,13 +109,10 @@ public class ServiceDirectory {
     }
 
     /**
-     * Shutdown the ServiceDirectory.
-     *
-     * Be careful to invoke this method, it used to help gc
-     * in shutdown the jvm.
-     * The whole ServiceDirectory shutdown, it cannot be used unless restart the jvm
-     * and reload the ServiceDirectory class. The methods throw SERVICE_DIRECTORY_IS_SHUTDOWN error.
+     * Shut down the ServiceDirectory.
      *
+     * Be careful to invoke this method. When shutdown() is called, ServiceDirectory cannot be used 
+     * unless restart the jvm and reload the ServiceDirectory class. 
      *
      */
     public static void shutdown(){
diff --git a/1.1/sd-api/src/main/java/com/cisco/oss/foundation/directory/config/ServiceDirectoryConfig.java b/1.1/sd-api/src/main/java/com/cisco/oss/foundation/directory/config/ServiceDirectoryConfig.java
index 5069858..33bf220 100644
--- a/1.1/sd-api/src/main/java/com/cisco/oss/foundation/directory/config/ServiceDirectoryConfig.java
+++ b/1.1/sd-api/src/main/java/com/cisco/oss/foundation/directory/config/ServiceDirectoryConfig.java
@@ -24,7 +24,7 @@ import org.apache.commons.configuration.Configuration;
 /**
  * The SD API Configuration class.
  *
- * It allows application to get the property value, set a new property value and add ConfigurationListener in runtime.
+ * It allows application to get a property value, set a new property value and add ConfigurationListener in runtime.
  *
  * @author zuxiang
  *
diff --git a/1.1/sd-api/src/main/java/com/cisco/oss/foundation/directory/exception/DirectoryServerClientException.java b/1.1/sd-api/src/main/java/com/cisco/oss/foundation/directory/exception/DirectoryServerClientException.java
index 253d8d9..bec1562 100644
--- a/1.1/sd-api/src/main/java/com/cisco/oss/foundation/directory/exception/DirectoryServerClientException.java
+++ b/1.1/sd-api/src/main/java/com/cisco/oss/foundation/directory/exception/DirectoryServerClientException.java
@@ -19,6 +19,10 @@
 
 package com.cisco.oss.foundation.directory.exception;
 
+/**
+ * It is the unchecked Exception used in DirectoryServiceClient
+ *
+ */
 public class DirectoryServerClientException extends ServiceRuntimeException{
     /**
      * serialVersionUID
diff --git a/1.1/sd-api/src/main/java/com/cisco/oss/foundation/directory/impl/CachedDirectoryLookupService.java b/1.1/sd-api/src/main/java/com/cisco/oss/foundation/directory/impl/CachedDirectoryLookupService.java
index 7a0a6f9..85d69be 100644
--- a/1.1/sd-api/src/main/java/com/cisco/oss/foundation/directory/impl/CachedDirectoryLookupService.java
+++ b/1.1/sd-api/src/main/java/com/cisco/oss/foundation/directory/impl/CachedDirectoryLookupService.java
@@ -47,10 +47,10 @@ import com.cisco.oss.foundation.directory.utils.JsonSerializer;
 import com.cisco.oss.foundation.directory.utils.ServiceInstanceUtils;
 
 /**
- * It is the DirectoryLookupService with Cache.
+ * It is the DirectoryLookupService with client-side Cache.
  *
  * It caches ServiceInstance for quick lookup and provides the cache sync function to
- * sync the latest change of the cached ServiceInstances.
+ * sync the latest changes of the cached ServiceInstances.
  *
  * @author zuxiang
  *
@@ -169,7 +169,8 @@ public class CachedDirectoryLookupService extends DirectoryLookupService impleme
     /**
      * Get the ModelService.
      *
-     * It will query the cache first, if the cache is enabled.
+     * It will query the cache first. If not found in the cache, the service will be added to the cache.
+     * 
      *
      * @param serviceName
      *         the Service name.
@@ -191,7 +192,7 @@ public class CachedDirectoryLookupService extends DirectoryLookupService impleme
     /**
      * Get the ModelMetadataKey
      *
-     * It will query the cache first, if the cache is enabled.
+     * It will query the cache first. If not found in the cache, the metadata key will be added to the cache.
      *
      * @param keyName
      *         the metadata key name.
@@ -211,7 +212,7 @@ public class CachedDirectoryLookupService extends DirectoryLookupService impleme
     }
 
     /**
-     * Initialize the CacheSyncTask lazily.
+     * Lazy initialization of the CacheSyncTask
      *
      * It is thread safe.
      */
@@ -309,7 +310,7 @@ public class CachedDirectoryLookupService extends DirectoryLookupService impleme
     }
 
     /**
-     * Get the ModelMetadataKey List for sync.
+     * Get the ModelMetadataKey List for cache sync.
      *
      * The ModelMetadataKey doesn't have the referenced ModelServiceInstances.
      *
@@ -330,7 +331,7 @@ public class CachedDirectoryLookupService extends DirectoryLookupService impleme
     }
 
     /**
-     * Get the MetadataKey changing delta.
+     * Get the changed list for the MetadataKey from the server.
      *
      * @param keys
      *         the MetadataKey List.
@@ -342,7 +343,7 @@ public class CachedDirectoryLookupService extends DirectoryLookupService impleme
     }
 
     /**
-     * Get the Service changing delta for Services list.
+     * Get the changed Services list from the server.
      *
      * @param services
      *         the Service list.
@@ -418,12 +419,12 @@ public class CachedDirectoryLookupService extends DirectoryLookupService impleme
                                     LOGGER.info("Update the ModelMetadataKey in cache, keyName=" + keyName);
                                 }
                             } else {
-                                LOGGER.info("Cache sync ModelMetadataKey failed, keyName=" + keyName + " - " + result.getError().getErrorMessage());
+                                LOGGER.error("Cache sync ModelMetadataKey failed, keyName=" + keyName + " - " + result.getError().getErrorMessage());
                             }
 
                         }
                     } else {
-                        LOGGER.error("Get no MetadataKey changed response.");
+                        LOGGER.info("No MetadataKey is changed from server response.");
                     }
                 } else {
                     LOGGER.info("No MetadataKey in the cache, skip cache sync.");
@@ -456,11 +457,11 @@ public class CachedDirectoryLookupService extends DirectoryLookupService impleme
                                 }
                                 onServiceChanged(newService, oldService);
                             } else {
-                                LOGGER.info("Cache sync ModelService failed, serviceName=" + serviceName + " - " + result.getError().getErrorMessage());
+                                LOGGER.error("Cache sync ModelService failed, serviceName=" + serviceName + " - " + result.getError().getErrorMessage());
                             }
                         }
                     } else {
-                        LOGGER.error("Get no Service changed response.");
+                        LOGGER.info("No Service is changed from server response.");
                     }
                 } else {
                     LOGGER.info("No service in the cache, skip cache sync.");
@@ -479,10 +480,8 @@ public class CachedDirectoryLookupService extends DirectoryLookupService impleme
             }catch(Exception e){
                 LOGGER.error("Sync ModelService cache from ServiceDirectory Server failed", e);
             }
-
-
-
         }
+        
 
         private void onServiceChanged(ModelService newService, ModelService oldService){
             if(newService == null || oldService == null || newService == oldService){
diff --git a/1.1/sd-api/src/main/java/com/cisco/oss/foundation/directory/impl/DefaultServiceDirectoryManagerFactory.java b/1.1/sd-api/src/main/java/com/cisco/oss/foundation/directory/impl/DefaultServiceDirectoryManagerFactory.java
index d7bb7ac..31b0548 100644
--- a/1.1/sd-api/src/main/java/com/cisco/oss/foundation/directory/impl/DefaultServiceDirectoryManagerFactory.java
+++ b/1.1/sd-api/src/main/java/com/cisco/oss/foundation/directory/impl/DefaultServiceDirectoryManagerFactory.java
@@ -62,7 +62,7 @@ public class DefaultServiceDirectoryManagerFactory implements
     /**
      * Get RegistrationManager.
      *
-     * It is thread safe in lazy initializing.
+     * It is thread safe.
      *
      * @return
      *         the RegistrationManager implementation instance.
@@ -82,9 +82,9 @@ public class DefaultServiceDirectoryManagerFactory implements
     }
 
     /**
-     * get LookupManager
+     * Get LookupManager
      *
-     * It is thread safe in lazy initializing.
+     * It is thread safe.
      *
      * @return
      *         the LookupManager implementation instance.
diff --git a/1.1/sd-api/src/main/java/com/cisco/oss/foundation/directory/impl/DirectoryInvoker.java b/1.1/sd-api/src/main/java/com/cisco/oss/foundation/directory/impl/DirectoryInvoker.java
index e0336ca..d58a16f 100644
--- a/1.1/sd-api/src/main/java/com/cisco/oss/foundation/directory/impl/DirectoryInvoker.java
+++ b/1.1/sd-api/src/main/java/com/cisco/oss/foundation/directory/impl/DirectoryInvoker.java
@@ -54,6 +54,8 @@ public class DirectoryInvoker {
      *
      * @param directoryAddresses
      *         The remote ServiceDirectory node address array, in the format of http://<host>:<port>
+     * @param serializer
+     *         The JsonSerializer  
      */
     public DirectoryInvoker(String directoryAddresses, JsonSerializer serializer) {
         this.directoryAddresses = directoryAddresses;
@@ -66,7 +68,7 @@ public class DirectoryInvoker {
      *
      * @param uri        The URI of the RESTful service.
      * @param payload    The HTTP body String.
-     * @param method    THe HTTP method.
+     * @param method     The HTTP method.
      * @return
      *         the HttpResponse.
      */
@@ -126,7 +128,7 @@ public class DirectoryInvoker {
      *
      * @param uri        The URI of the RESTful service.
      * @param payload    The HTTP body string.
-     * @param method    The HTTP method.
+     * @param method     The HTTP method.
      * @param headers    The HTTP headers.
      * @return
      *         the HttpResponse.
@@ -181,7 +183,7 @@ public class DirectoryInvoker {
     }
 
     /**
-     * Keep it default for unit test.
+     * HttpUtils setter, keep it default for unit test.
      *
      * @param httpUtils
      *         the customer HttpUtils.
diff --git a/1.1/sd-api/src/main/java/com/cisco/oss/foundation/directory/impl/DirectoryLookupService.java b/1.1/sd-api/src/main/java/com/cisco/oss/foundation/directory/impl/DirectoryLookupService.java
index d6448a2..1be0470 100644
--- a/1.1/sd-api/src/main/java/com/cisco/oss/foundation/directory/impl/DirectoryLookupService.java
+++ b/1.1/sd-api/src/main/java/com/cisco/oss/foundation/directory/impl/DirectoryLookupService.java
@@ -38,7 +38,7 @@ import com.cisco.oss.foundation.directory.exception.ServiceRuntimeException;
 /**
  * It is the Directory LookupService to perform the lookup functionality.
  *
- * It looks up ServiceInstance from DirectoryServer.
+ * It looks up ServiceInstance from Directory Server.
  *
  * @author zuxiang
  *
@@ -66,7 +66,7 @@ public class DirectoryLookupService {
     }
 
     /**
-     * Get the ModelService.
+     * Get the ModelService by service name.
      *
      * @param serviceName
      *         the Service name.
@@ -79,7 +79,7 @@ public class DirectoryLookupService {
     }
 
     /**
-     * Get the ModelMetadataKey
+     * Get the ModelMetadataKey by key name
      *
      * @param keyName
      *         the metadata key name.
@@ -134,7 +134,6 @@ public class DirectoryLookupService {
     /**
      * Get the UP ModelServiceInstance list by the Metadata Key.
      *
-     * It only return the UP ServiceInstance.
      *
      * @param keyName
      *         the metadata key name.
@@ -183,7 +182,7 @@ public class DirectoryLookupService {
     }
 
     /**
-     * Get All ModelServiceInstance in the ServiceDirectory.
+     * Get All ModelServiceInstance on the Directory Server.
      *
      * @return
      *         the ModelServiceInstance List.
@@ -196,7 +195,6 @@ public class DirectoryLookupService {
     /**
      * Get the UP ModelServiceInstance list of the Service.
      *
-     * It only return the UP ServiceInstance of the Service.
      * @param serviceName
      *         the service name.
      * @return
@@ -229,8 +227,8 @@ public class DirectoryLookupService {
     /**
      * Add a NotificationHandler to the Service.
      *
-     * This method can check the duplicate NotificationHandler for the serviceName, if the NotificationHandler
-     * already exists in the serviceName, do nothing.
+     * This method will check the duplicate NotificationHandler for the serviceName, if the NotificationHandler
+     * already exists for the serviceName, do nothing.
      *
      * Throw IllegalArgumentException if serviceName or handler is null.
      *
@@ -295,9 +293,7 @@ public class DirectoryLookupService {
     }
 
     /**
-     * On a ServiceInstance Unavailable.
-     *
-     * It will invoke the serviceInstanceUnavailable of the NotificationHandler.
+     * Invoke the serviceInstanceUnavailable of the NotificationHandler.
      *
      * @param instance
      *         the ServiceInstance.
@@ -317,9 +313,7 @@ public class DirectoryLookupService {
     }
 
     /**
-     * On a ServiceInstance status change.
-     *
-     * It will invoke the serviceInstanceChange of the NotificationHandler.
+     * Invoke the serviceInstanceChange of the NotificationHandler.
      *
      * @param instance
      *         the ServiceInstance.
@@ -336,9 +330,7 @@ public class DirectoryLookupService {
     }
 
     /**
-     * On a ServiceInstance Available.
-     *
-     * It will invoke the serviceInstanceAvailable of the NotificationHandler.
+     * Invoke the serviceInstanceAvailable of the NotificationHandler.
      *
      * @param instance
      *         the ServiceInstance.
diff --git a/1.1/sd-api/src/main/java/com/cisco/oss/foundation/directory/impl/DirectoryRegistrationService.java b/1.1/sd-api/src/main/java/com/cisco/oss/foundation/directory/impl/DirectoryRegistrationService.java
index 98cd73e..9973324 100644
--- a/1.1/sd-api/src/main/java/com/cisco/oss/foundation/directory/impl/DirectoryRegistrationService.java
+++ b/1.1/sd-api/src/main/java/com/cisco/oss/foundation/directory/impl/DirectoryRegistrationService.java
@@ -32,7 +32,7 @@ import com.cisco.oss.foundation.directory.exception.ServiceRuntimeException;
 /**
  * It is the Directory Registration Service to perform the ServiceInstance registration.
  *
- * It registers ServiceInstance to DirectoryServer.
+ * It registers ServiceInstance to Directory Server.
  *
  * @author zuxiang
  *
@@ -45,12 +45,12 @@ public class DirectoryRegistrationService {
     public static final String SD_API_REGISTRY_DISABLE_OWNER_ERROR_PROPERTY_NAME = "registry.disable.owner.error";
 
     /**
-     * Default to enable ILLEGAL_SERVICE_INSTANCE_OWNER_ERROR.
+     * Default to disable ILLEGAL_SERVICE_INSTANCE_OWNER_ERROR.
      */
     public static final boolean SD_API_REGISTRY_DISABLE_OWNER_ERROR_DEFAULT = false;
 
     /**
-     * The remote ServiceDirectory node client.
+     * The remote ServiceDirectory client.
      */
     private final DirectoryServiceClientManager directoryServiceClientManager;
 
diff --git a/1.1/sd-api/src/main/java/com/cisco/oss/foundation/directory/impl/HeartbeatDirectoryRegistrationService.java b/1.1/sd-api/src/main/java/com/cisco/oss/foundation/directory/impl/HeartbeatDirectoryRegistrationService.java
index e4f5f16..1ee216b 100644
--- a/1.1/sd-api/src/main/java/com/cisco/oss/foundation/directory/impl/HeartbeatDirectoryRegistrationService.java
+++ b/1.1/sd-api/src/main/java/com/cisco/oss/foundation/directory/impl/HeartbeatDirectoryRegistrationService.java
@@ -107,7 +107,7 @@ public class HeartbeatDirectoryRegistrationService extends
     public static final int SD_API_HEARTBEAT_INTERVAL_DEFAULT = 10;
 
     /**
-     * All ServiceInstanceHealth set collection.
+     * The CachedProviderServiceInstance Set
      */
     private volatile HashMap<ServiceInstanceId, CachedProviderServiceInstance> instanceCache;
 
@@ -157,8 +157,7 @@ public class HeartbeatDirectoryRegistrationService extends
     /**
      * Stop the Component.
      *
-     * it is idempotent, it can be invoked in multiple times while in same
-     * state. But not thread safe.
+     * it is idempotent, it can be invoked in multiple times.
      */
     @Override
     public void stop() {
@@ -171,7 +170,6 @@ public class HeartbeatDirectoryRegistrationService extends
                 healthJob.shutdown();
             }
         }
-
     }
 
     /**
@@ -308,9 +306,9 @@ public class HeartbeatDirectoryRegistrationService extends
     }
 
     /**
-     * Edit the Cached ProvidedServiceInstance when updateService.
+     * Edit the Cached ProvidedServiceInstance when updateService is called.
      *
-     * if it cached, update, if not, do nothing.
+     * It is thread safe. 
      *
      * @param instance
      *         the ProvidedServiceInstance.
@@ -360,9 +358,8 @@ public class HeartbeatDirectoryRegistrationService extends
     }
 
     /**
-     * Delete the Cache ProvidedServiceInstance by serviceName and providerId.
+     * Delete the Cached ProvidedServiceInstance by serviceName and providerId.
      *
-     * Delete the Cache ProvidedServiceInstance, if it not exits, do nothing.
      * It is thread safe.
      *
      * @param serviceName
@@ -406,8 +403,8 @@ public class HeartbeatDirectoryRegistrationService extends
     }
 
     /**
-     * initialize the Heartbeat task and Health Check task. It invoked in the
-     * getCacheServiceInstances method which is thread safe, no synchronized
+     * Initialize the Heartbeat task and Health Check task. It is invoked in the
+     * getCacheServiceInstances method which is thread safe, no synchronized block
      * needed.
      */
     private void initJobTasks() {
@@ -528,10 +525,10 @@ public class HeartbeatDirectoryRegistrationService extends
                     heartbeatMap.put(id, instance);
                 }
 
-                Map<String, OperationResult<String>> operateRsult = getServiceDirectoryClient()
+                Map<String, OperationResult<String>> operateResult = getServiceDirectoryClient()
                         .sendHeartBeat(heartbeatMap);
-                if (operateRsult != null) {
-                    for (Entry<String, OperationResult<String>> entry : operateRsult
+                if (operateResult != null) {
+                    for (Entry<String, OperationResult<String>> entry : operateResult
                             .entrySet()) {
                         boolean result = entry.getValue().getResult();
                         if (result == false) {
@@ -612,7 +609,7 @@ public class HeartbeatDirectoryRegistrationService extends
         }
 
         /**
-         * Get the ServiceInstanceHealth.
+         * Set the ServiceInstanceHealth.
          *
          * @param healthCallback
          *            the ServiceInstanceHealth.
@@ -626,7 +623,7 @@ public class HeartbeatDirectoryRegistrationService extends
         /**
          * Get the ServiceInstanceHealth.
          *
-         * @return the ServiceInstanceHealth callback instance.
+         * @return the ServiceInstanceHealth callback.
          */
         public ServiceInstanceHealth getServiceInstanceHealth() {
             return healthCallback;
@@ -670,7 +667,7 @@ public class HeartbeatDirectoryRegistrationService extends
         }
 
         /**
-         * check is monitor enable in Service Directory.
+         * check whether it is monitor-enabled service instance
          *
          * @return true if monitor enabled.
          */
@@ -679,10 +676,10 @@ public class HeartbeatDirectoryRegistrationService extends
         }
 
         /**
-         * Set the monitor.
+         * Set the service to be monitored.
          *
          * @param monitor
-         *            the monitor.
+         *            true or false.
          */
         public void setMonitorEnabled(boolean monitor) {
             this.monitorEnabled = monitor;
diff --git a/1.1/sd-api/src/main/java/com/cisco/oss/foundation/directory/impl/LookupManagerImpl.java b/1.1/sd-api/src/main/java/com/cisco/oss/foundation/directory/impl/LookupManagerImpl.java
index 08f80c9..46bcb5d 100644
--- a/1.1/sd-api/src/main/java/com/cisco/oss/foundation/directory/impl/LookupManagerImpl.java
+++ b/1.1/sd-api/src/main/java/com/cisco/oss/foundation/directory/impl/LookupManagerImpl.java
@@ -49,8 +49,7 @@ import com.cisco.oss.foundation.directory.query.ServiceInstanceQuery.NotContainQ
 import com.cisco.oss.foundation.directory.utils.ServiceInstanceUtils;
 
 /**
- * The default LookupManager implementation to access the remote ServiceDirectory
- * node.
+ * The default LookupManager implementation to access the remote Directory Server.
  *
  * @author zuxiang
  *
@@ -100,7 +99,7 @@ public class LookupManagerImpl implements LookupManager, Closable {
     /**
      * Start the LookupManagerImpl.
      *
-     * it is idempotent, it can be invoked multiple times while in same state and is not thread safe.
+     * It is idempotent, and can be invoked multiple times.
      */
     @Override
     public void start(){
@@ -116,7 +115,7 @@ public class LookupManagerImpl implements LookupManager, Closable {
     /**
      * Stop the LookupManagerImpl
      *
-     * it is idempotent, it can be invoked multiple times while in same state and is not thread safe.
+     * It is thread safe.
      */
     @Override
     public void stop(){
@@ -508,10 +507,10 @@ public class LookupManagerImpl implements LookupManager, Closable {
     /**
      * Add a NotificationHandler to the Service.
      *
-     * This method can check the duplicate NotificationHandler for the serviceName, if the NotificationHandler
-     * already exists in the serviceName, do nothing.
+     * This method can check the duplicated NotificationHandler for the serviceName, if the NotificationHandler
+     * already exists for the serviceName, do nothing.
      *
-     * Throw IllegalArgumentException if serviceName or handler is null.
+     * Throws IllegalArgumentException if serviceName or handler is null.
      *
      * @param serviceName
      *         the service name.
@@ -572,7 +571,7 @@ public class LookupManagerImpl implements LookupManager, Closable {
     /**
      * Get the DirectoryLookupService to do the lookup.
      *
-     * It is thread safe and lazy initialized.
+     * It is thread safe.
      *
      * @return
      *         the LookupService.
@@ -605,7 +604,7 @@ public class LookupManagerImpl implements LookupManager, Closable {
      * For those methods, the ContainQueryCriterion and NotContainQueryCriterion are not supported.
      *
      * @param query
-     *         the ServiceInstanceQuery to validate.
+     *         the ServiceInstanceQuery to be validated.
      * @throws ServiceException
      *         when the ServiceInstanceQuery has ContainQueryCriterion or NotContainQueryCriterion.
      */
diff --git a/1.1/sd-api/src/main/java/com/cisco/oss/foundation/directory/impl/ServiceDirectoryImpl.java b/1.1/sd-api/src/main/java/com/cisco/oss/foundation/directory/impl/ServiceDirectoryImpl.java
index e3a2e03..8345dd1 100644
--- a/1.1/sd-api/src/main/java/com/cisco/oss/foundation/directory/impl/ServiceDirectoryImpl.java
+++ b/1.1/sd-api/src/main/java/com/cisco/oss/foundation/directory/impl/ServiceDirectoryImpl.java
@@ -51,7 +51,7 @@ public class ServiceDirectoryImpl implements DirectoryServiceClientManager{
     public static final String SD_API_SERVICE_DIRECTORY_MANAGER_FACTORY_PROVIDER_PROPERTY = "service.directory.manager.factory.provider";
 
     /**
-     * ServiceDirectory server node client, it is lazy initialized.
+     * ServiceDirectory client, it is lazy initialized.
      */
     private DirectoryServiceClient client ;
 
@@ -104,7 +104,7 @@ public class ServiceDirectoryImpl implements DirectoryServiceClientManager{
     }
 
     /**
-     * Get the ServiceDirectoryConfig in sd-api.
+     * Get the ServiceDirectoryConfig.
      *
      * @return
      *         the ServiceDirectory configuration.
@@ -114,7 +114,7 @@ public class ServiceDirectoryImpl implements DirectoryServiceClientManager{
     }
 
     /**
-     * Set the ServiceDirectoryManagerFactory in the sd-api.
+     * Set the ServiceDirectoryManagerFactory.
      *
      * @param factory
      *         the ServiceDirectoryManagerFactory.
@@ -172,7 +172,7 @@ public class ServiceDirectoryImpl implements DirectoryServiceClientManager{
     }
 
     /**
-     * Shutdown the ServiceDirectory and the ServiceDirectoryManagerFactory.
+     * Shut down the ServiceDirectory client and the ServiceDirectoryManagerFactory.
      */
     public void shutdown(){
         synchronized(this){
@@ -221,7 +221,7 @@ public class ServiceDirectoryImpl implements DirectoryServiceClientManager{
                                 directoryManagerFactory = (ServiceDirectoryManagerFactory) provider
                                         .newInstance();
                                 directoryManagerFactory.initialize(this);
-                                LOGGER.info("Instantialized the ServiceDirectoryManager with customer implementation " + custProvider + ".");
+                                LOGGER.info("Instantialize the ServiceDirectoryManager with customer implementation " + custProvider + ".");
                             }
                         } catch (Exception e) {
                             LOGGER.error(
@@ -231,7 +231,7 @@ public class ServiceDirectoryImpl implements DirectoryServiceClientManager{
                     }
 
                     if (directoryManagerFactory == null) {
-                        LOGGER.info("Instantialized the ServiceDirectoryManager with default implementation StandServiceDirectoryManager.");
+                        LOGGER.info("Instantialize the ServiceDirectoryManager with default implementation - StandServiceDirectoryManager.");
                         directoryManagerFactory = new DefaultServiceDirectoryManagerFactory();
                         directoryManagerFactory.initialize(this);
                     }
diff --git a/1.1/sd-api/src/main/java/com/cisco/oss/foundation/directory/lb/LoadBalancerManager.java b/1.1/sd-api/src/main/java/com/cisco/oss/foundation/directory/lb/LoadBalancerManager.java
index 1bef63c..1401358 100644
--- a/1.1/sd-api/src/main/java/com/cisco/oss/foundation/directory/lb/LoadBalancerManager.java
+++ b/1.1/sd-api/src/main/java/com/cisco/oss/foundation/directory/lb/LoadBalancerManager.java
@@ -21,6 +21,10 @@ import java.util.List;
 import com.cisco.oss.foundation.directory.impl.DirectoryLookupService;
 import com.cisco.oss.foundation.directory.query.ServiceInstanceQuery;
 
+/**
+ * LoadBalancerManager interface for the service lookup.
+ *
+ */
 public class LoadBalancerManager {
 
     /**
@@ -34,6 +38,12 @@ public class LoadBalancerManager {
 
     private final DirectoryLookupService lookupService;
 
+    /**
+     * Constructor.
+     *
+     * @param lookupService
+     *         the DirectoryLookupService
+     */
     public LoadBalancerManager(DirectoryLookupService lookupService) {
         svcLBList = new ArrayList<ServiceRRLoadBalancer>();
         metaQueryLBList = new ArrayList<MetadataQueryRRLoadBalancer>();
@@ -41,6 +51,14 @@ public class LoadBalancerManager {
         this.lookupService = lookupService;
     }
 
+    /**
+     * Get the Round Robin loadbalancer for named service.
+     *
+     * @param serviceName
+     *         the service name.
+     * @return
+     *         the ServiceRRLoadBalancer.
+     */
     public ServiceRRLoadBalancer getServiceRRLoadBalancer(String serviceName) {
         ServiceRRLoadBalancer lb = null;
         synchronized(svcLBList){
@@ -58,6 +76,14 @@ public class LoadBalancerManager {
         return lb;
     }
 
+    /**
+     * Get the metadata query Round Robin loadbalancer for a ServiceInstanceQuery.
+     *
+     * @param query
+     *         the ServiceInstanceQuery.
+     * @return
+     *         the MetadataQueryRRLoadBalancer.
+     */
     public MetadataQueryRRLoadBalancer getMetadataQueryRRLoadBalancer(
             ServiceInstanceQuery query) {
         MetadataQueryRRLoadBalancer lb = null;
@@ -76,6 +102,16 @@ public class LoadBalancerManager {
         return lb;
     }
 
+    /**
+     * Get the service query Round Robin loadbalancer for a ServiceInstanceQuery.
+     *
+     * @param serviceName
+     *         the service name.
+     * @param query
+     *         the ServiceInstanceQuery.
+     * @return
+     *         the ServiceQueryRRLoadBalancer.
+     */
     public ServiceQueryRRLoadBalancer getServiceQueryRRLoadBalancer(
             String serviceName, ServiceInstanceQuery query) {
         ServiceQueryRRLoadBalancer lb = null;
diff --git a/1.1/sd-api/src/main/java/com/cisco/oss/foundation/directory/lb/MetadataQueryRRLoadBalancer.java b/1.1/sd-api/src/main/java/com/cisco/oss/foundation/directory/lb/MetadataQueryRRLoadBalancer.java
index 992b50a..7f4718b 100644
--- a/1.1/sd-api/src/main/java/com/cisco/oss/foundation/directory/lb/MetadataQueryRRLoadBalancer.java
+++ b/1.1/sd-api/src/main/java/com/cisco/oss/foundation/directory/lb/MetadataQueryRRLoadBalancer.java
@@ -23,18 +23,41 @@ import com.cisco.oss.foundation.directory.impl.DirectoryLookupService;
 import com.cisco.oss.foundation.directory.impl.ServiceInstanceQueryHelper;
 import com.cisco.oss.foundation.directory.query.ServiceInstanceQuery;
 
+/**
+ * The metadata query Round Robin loadbalancer implementation.
+ *
+ */
 public class MetadataQueryRRLoadBalancer extends RoundRobinLoadBalancer {
 
         private final ServiceInstanceQuery query;
+        
+        /**
+         * Constructor.
+         *
+         * @param lookupService
+         *         the DirectoryLookupService
+         *         
+         * @param query
+         *         the ServiceInstanceQuery
+         */
         public MetadataQueryRRLoadBalancer(DirectoryLookupService lookupService, ServiceInstanceQuery query) {
             super(lookupService);
             this.query = query;
         }
 
+        /**
+         * Get the ServiceInstanceQuery.
+         *
+         * @return
+         *         the ServiceInstanceQuery.
+         */
         public ServiceInstanceQuery getServiceInstanceQuery(){
             return query;
         }
 
+        /**
+         * {@inheritDoc}
+         */
         @Override
         public List<ModelServiceInstance> getServiceInstanceList() {
             List<ModelServiceInstance> instances = null;
diff --git a/1.1/sd-api/src/main/java/com/cisco/oss/foundation/directory/lb/ServiceQueryRRLoadBalancer.java b/1.1/sd-api/src/main/java/com/cisco/oss/foundation/directory/lb/ServiceQueryRRLoadBalancer.java
index ea4caad..8ad0b92 100644
--- a/1.1/sd-api/src/main/java/com/cisco/oss/foundation/directory/lb/ServiceQueryRRLoadBalancer.java
+++ b/1.1/sd-api/src/main/java/com/cisco/oss/foundation/directory/lb/ServiceQueryRRLoadBalancer.java
@@ -24,24 +24,57 @@ import com.cisco.oss.foundation.directory.impl.DirectoryLookupService;
 import com.cisco.oss.foundation.directory.impl.ServiceInstanceQueryHelper;
 import com.cisco.oss.foundation.directory.query.ServiceInstanceQuery;
 
+
+/**
+ * The service query Round Robin loadbalancer implementation.
+ *
+ */
 public class ServiceQueryRRLoadBalancer extends RoundRobinLoadBalancer {
 
     private final String serviceName ;
     private final ServiceInstanceQuery query;
+    
+    /**
+     * Constructor.
+     *
+     * @param lookupService
+     *         the DirectoryLookupService
+     *         
+     * @param serviceName
+     *         the service name
+     *         
+     * @param query
+     *         the ServiceInstanceQuery
+     */
     public ServiceQueryRRLoadBalancer(DirectoryLookupService lookupService, String serviceName, ServiceInstanceQuery query) {
         super(lookupService);
         this.serviceName = serviceName;
         this.query = query;
     }
 
+    /**
+     * Get the service name.
+     *
+     * @return
+     *         the service name.
+     */
     public String getServiceName(){
         return serviceName;
     }
 
+    /**
+     * Get the ServiceInstanceQuery.
+     *
+     * @return
+     *         the ServiceInstanceQuery.
+     */
     public ServiceInstanceQuery getServiceInstanceQuery(){
         return query;
     }
 
+    /**
+     * {@inheritDoc}
+     */
     @Override
     public List<ModelServiceInstance> getServiceInstanceList() {
         List<ModelServiceInstance> modelSvc = getLookupService().getUPModelInstances(serviceName);
diff --git a/1.1/sd-api/src/main/java/com/cisco/oss/foundation/directory/lb/ServiceRRLoadBalancer.java b/1.1/sd-api/src/main/java/com/cisco/oss/foundation/directory/lb/ServiceRRLoadBalancer.java
index f816757..c910c52 100644
--- a/1.1/sd-api/src/main/java/com/cisco/oss/foundation/directory/lb/ServiceRRLoadBalancer.java
+++ b/1.1/sd-api/src/main/java/com/cisco/oss/foundation/directory/lb/ServiceRRLoadBalancer.java
@@ -20,18 +20,40 @@ import java.util.List;
 import com.cisco.oss.foundation.directory.entity.ModelServiceInstance;
 import com.cisco.oss.foundation.directory.impl.DirectoryLookupService;
 
+/**
+ * The service query Round Robin loadbalancer implementation.
+ *
+ */
 public class ServiceRRLoadBalancer extends RoundRobinLoadBalancer {
 
     private final String serviceName ;
+    /**
+     * Constructor.
+     *
+     * @param lookupService
+     *         the DirectoryLookupService
+     *         
+     * @param serviceName
+     *         the service name
+     */
     public ServiceRRLoadBalancer(DirectoryLookupService lookupService, String serviceName) {
         super(lookupService);
         this.serviceName = serviceName;
     }
 
+    /**
+     * Get the service name.
+     *
+     * @return
+     *         the service name.
+     */
     public String getServiceName(){
         return serviceName;
     }
 
+    /**
+     * {@inheritDoc}
+     */
     @Override
     public List<ModelServiceInstance> getServiceInstanceList() {
         return getLookupService().getUPModelInstances(serviceName);
diff --git a/1.1/sd-api/src/main/java/com/cisco/oss/foundation/directory/test/DefaultTestServiceDirectoryManager.java b/1.1/sd-api/src/main/java/com/cisco/oss/foundation/directory/test/DefaultTestServiceDirectoryManager.java
index 3d3491a..1e96fa7 100644
--- a/1.1/sd-api/src/main/java/com/cisco/oss/foundation/directory/test/DefaultTestServiceDirectoryManager.java
+++ b/1.1/sd-api/src/main/java/com/cisco/oss/foundation/directory/test/DefaultTestServiceDirectoryManager.java
@@ -50,7 +50,7 @@ import com.cisco.oss.foundation.directory.query.ServiceInstanceQuery;
 import com.cisco.oss.foundation.directory.utils.ServiceInstanceUtils;
 
 /**
- * The default Directory API RegistrationManager, LookupManager implementation for Test.
+ * The default Directory API RegistrationManager, LookupManager implementation for application testing purpose.
  *
  * It implements the RegistrationManager and LookupManager interfaces to operate the ServiceInstance
  * at client side and does not invoke a remote ServiceDirectory server node, all ServiceInstances
diff --git a/1.1/sd-core/src/main/java/com/cisco/oss/foundation/directory/entity/ModelService.java b/1.1/sd-core/src/main/java/com/cisco/oss/foundation/directory/entity/ModelService.java
index 7223a5a..74ce675 100644
--- a/1.1/sd-core/src/main/java/com/cisco/oss/foundation/directory/entity/ModelService.java
+++ b/1.1/sd-core/src/main/java/com/cisco/oss/foundation/directory/entity/ModelService.java
@@ -23,8 +23,8 @@ import org.codehaus.jackson.annotate.JsonIgnoreProperties;
 /**
  * The Service Model Object in Service Directory.
  *
- * It is the logic Service Object in Service Directory. The ServiceInstance of
- * same service name belong to one ModeService.
+ * It is the logic Service Object in Service Directory. ModelService consists of Service Instances with 
+ * same service name.
  *
  * @author zuxiang
  *
diff --git a/1.1/sd-core/src/main/java/com/cisco/oss/foundation/directory/entity/ModelServiceInstance.java b/1.1/sd-core/src/main/java/com/cisco/oss/foundation/directory/entity/ModelServiceInstance.java
index 30f6957..ec28a9d 100644
--- a/1.1/sd-core/src/main/java/com/cisco/oss/foundation/directory/entity/ModelServiceInstance.java
+++ b/1.1/sd-core/src/main/java/com/cisco/oss/foundation/directory/entity/ModelServiceInstance.java
@@ -21,9 +21,9 @@ import java.util.Map;
 import org.codehaus.jackson.annotate.JsonIgnoreProperties;
 
 /**
- * The Model ServiceInstance object in Service Directory.
+ * The ModelServiceInstance object in Service Directory.
  *
- * It is the Model ServiceInstance object that has all attributes.
+ * It has all service attributes.
  *
  * @author zuxiang
  *
@@ -52,12 +52,12 @@ public class ModelServiceInstance {
     private OperationalStatus status;
 
     /**
-     * Whether the instance enabled Monitor in Service Directory.
+     * Whether the instance is monitored or not in Service Directory.
      */
     private boolean monitorEnabled = true;
 
     /**
-     * The instance creating time.
+     * The instance creation time.
      */
     private Date createTime;
 
diff --git a/1.1/sd-core/src/main/java/com/cisco/oss/foundation/directory/entity/OperationResult.java b/1.1/sd-core/src/main/java/com/cisco/oss/foundation/directory/entity/OperationResult.java
index 8995b6d..b782f95 100644
--- a/1.1/sd-core/src/main/java/com/cisco/oss/foundation/directory/entity/OperationResult.java
+++ b/1.1/sd-core/src/main/java/com/cisco/oss/foundation/directory/entity/OperationResult.java
@@ -21,8 +21,8 @@ import com.cisco.oss.foundation.directory.exception.ServiceDirectoryError;
  * The class to describe the operation result.
  *
  * It has the result field to indicate the operation result, true for succeed,
- * false for fail. If result is false, see the ServiceDirectoryError to error
- * field. Now it used in the batch update operation, like send heartbeat for
+ * false for fail. If result is false, see the ServiceDirectoryError for error
+ * field. It is used in the batch update operation, like sending heartbeat for
  * bunches of ServiceInstance.
  *
  * @author zuxiang
diff --git a/1.1/sd-core/src/main/java/com/cisco/oss/foundation/directory/entity/OperationalStatus.java b/1.1/sd-core/src/main/java/com/cisco/oss/foundation/directory/entity/OperationalStatus.java
index e8b7591..a87b018 100644
--- a/1.1/sd-core/src/main/java/com/cisco/oss/foundation/directory/entity/OperationalStatus.java
+++ b/1.1/sd-core/src/main/java/com/cisco/oss/foundation/directory/entity/OperationalStatus.java
@@ -24,7 +24,7 @@ package com.cisco.oss.foundation.directory.entity;
 public enum OperationalStatus {
 
     /**
-     * UP will be consumed in Service Consumer.
+     * UP service instance will be consumed in Service Consumer.
      */
     UP("UP"),
 
diff --git a/1.1/sd-core/src/main/java/com/cisco/oss/foundation/directory/entity/ProvidedServiceInstance.java b/1.1/sd-core/src/main/java/com/cisco/oss/foundation/directory/entity/ProvidedServiceInstance.java
index 27b2bc5..063e50e 100644
--- a/1.1/sd-core/src/main/java/com/cisco/oss/foundation/directory/entity/ProvidedServiceInstance.java
+++ b/1.1/sd-core/src/main/java/com/cisco/oss/foundation/directory/entity/ProvidedServiceInstance.java
@@ -20,7 +20,7 @@ import java.util.Map;
 import org.codehaus.jackson.annotate.JsonIgnoreProperties;
 
 /**
- * ProvidedServiceInstance used by Service Provider to register a service
+ * ProvidedServiceInstance used by Service Provider to register/update a service
  * instance.
  *
  * In the ProvidedServiceInstance, the address and port are required attributes
@@ -29,8 +29,8 @@ import org.codehaus.jackson.annotate.JsonIgnoreProperties;
  *
  * The providerId is defined as "address-port".
  *
- * The address is the real IP address of the running instance, the port is the
- * port which the instance binds to.
+ * The address is the real IP address or hostname of the running instance, 
+ * the port is the port which the instance binds to.
  *
  * @author zuxiang
  *
@@ -64,7 +64,7 @@ public class ProvidedServiceInstance {
     private OperationalStatus status;
 
     /**
-     * Whether the instance enabled Monitor in Service Directory.
+     * Whether the instance is monitored or not in Service Directory.
      */
     private boolean monitorEnabled = true;
 
@@ -199,7 +199,7 @@ public class ProvidedServiceInstance {
     }
 
     /**
-     * check is monitor enable in Service Directory.
+     * check if it is monitored in Service Directory.
      *
      * @return true if monitor enabled.
      */
@@ -208,10 +208,10 @@ public class ProvidedServiceInstance {
     }
 
     /**
-     * Set the monitor.
+     * Set the service to be monitored or not.
      *
      * @param monitor
-     *            the monitor.
+     *            true if monitor enabled, false if monitor disabled.
      */
     public void setMonitorEnabled(boolean monitor) {
         this.monitorEnabled = monitor;
@@ -248,11 +248,11 @@ public class ProvidedServiceInstance {
     /**
      * Get the composed provider id.
      *
-     * Provider id is the unique id in service, it is compose of the address and
-     * port field of the ProvidedServiceInstance.
+     * Provider id is the unique id for service, it is composed of the address and
+     * port fields of the ProvidedServiceInstance.
      *
-     * The address always be the real ip address of the Service Provider
-     * machine.
+     * The address always be the real ip address or hostname of the machine that 
+     * provides the service.
      *
      * @return the provider id.
      */
diff --git a/1.1/sd-core/src/main/java/com/cisco/oss/foundation/directory/entity/ServiceInstance.java b/1.1/sd-core/src/main/java/com/cisco/oss/foundation/directory/entity/ServiceInstance.java
index e7d4693..2299243 100644
--- a/1.1/sd-core/src/main/java/com/cisco/oss/foundation/directory/entity/ServiceInstance.java
+++ b/1.1/sd-core/src/main/java/com/cisco/oss/foundation/directory/entity/ServiceInstance.java
@@ -124,7 +124,7 @@ public class ServiceInstance {
     }
 
     /**
-     * check is monitor enable in Service Directory.
+     * check if service is monitored in Service Directory.
      *
      * @return true if monitor enabled.
      */
diff --git a/1.1/sd-core/src/main/java/com/cisco/oss/foundation/directory/entity/ServiceInstanceHeartbeat.java b/1.1/sd-core/src/main/java/com/cisco/oss/foundation/directory/entity/ServiceInstanceHeartbeat.java
index 671c037..230d350 100644
--- a/1.1/sd-core/src/main/java/com/cisco/oss/foundation/directory/entity/ServiceInstanceHeartbeat.java
+++ b/1.1/sd-core/src/main/java/com/cisco/oss/foundation/directory/entity/ServiceInstanceHeartbeat.java
@@ -18,8 +18,8 @@ package com.cisco.oss.foundation.directory.entity;
 /**
  * The heartbeat info of the ServiceInstance.
  *
- * It is the heartbeat info fo the ServiceInstance, sd-api send a list of the
- * ServiceInstanceHeartbeat to Service Directory server to update the heartbeat
+ * It is the heartbeat info of the ServiceInstance, API sends a list of the
+ * ServiceInstanceHeartbeat to ServiceDirectory server to update the heartbeat
  * of the ServiceInstance.
  *
  * @author zuxiang
diff --git a/1.1/sd-core/src/main/java/com/cisco/oss/foundation/directory/exception/ErrorCode.java b/1.1/sd-core/src/main/java/com/cisco/oss/foundation/directory/exception/ErrorCode.java
index 305b5b9..080773f 100644
--- a/1.1/sd-core/src/main/java/com/cisco/oss/foundation/directory/exception/ErrorCode.java
+++ b/1.1/sd-core/src/main/java/com/cisco/oss/foundation/directory/exception/ErrorCode.java
@@ -29,7 +29,7 @@ public enum ErrorCode {
 
     // Service Instance format validate error.
     /**
-     * Service Instance length too long when persistence to zookeeper. Message:
+     * Service Instance length too long when persisted to zookeeper. Message:
      * ServiceInstance length after serialization is too long, it should not
      * exceed {0}, current length is {1}.
      */
@@ -44,7 +44,7 @@ public enum ErrorCode {
 
     /**
      * Service Instance uri format error. Message: ServiceInstance uri format is
-     * wrong. It must be a validate URI.
+     * wrong. It must be a valid URI.
      */
     SERVICE_INSTANCE_URI_FORMAT_ERROR("400.3"),
 
@@ -77,9 +77,9 @@ public enum ErrorCode {
     SERVICE_INSTANCE_METAKEY_FORMAT_ERROR("400.7"),
 
     /**
-     * The ContainQueryCriterion and NotContainQueryCriterion doesn't support
-     * queryInstancesByKey. Message: ServiceInstanceQuery has illegal
-     * QueryCriteria. Query Instances by MetadataKey doesn't support
+     * The ContainQueryCriterion and NotContainQueryCriterion are not supported
+     * in queryInstancesByKey. Message: ServiceInstanceQuery has illegal
+     * QueryCriteria. Querying Instances by MetadataKey doesn't support
      * ContainQueryCriterion and NotContainQueryCriterion.
      */
     QUERY_CRITERION_ILLEGAL_IN_QUERY("400.8"),
@@ -91,7 +91,7 @@ public enum ErrorCode {
     SERVICE_INSTANCE_NOT_EXIST("404.1"),
 
     /**
-     * Service not exists. Message: The Service doesn't exits.
+     * Service not exists. Message: The Service doesn't exist.
      */
     SERVICE_NOT_EXIST("404.2"),
 
@@ -118,25 +118,25 @@ public enum ErrorCode {
     METADATA_KEY_ALREADY_EXIST("409.3"),
 
     /**
-     * General error that can not category. Message: General error: {0}
+     * General error that can not be categorized. Message: General error: {0}
      */
     GENERAL_ERROR("500.1"),
 
     /**
-     * Service is not empty when delete. Message: Cannot delete the Service is
+     * Service is not empty when being deleted. Message: Cannot delete the Service that is
      * not empty.
      */
     SERVICE_NOT_EMPTY_IN_DELETE("500.2"),
 
     /**
-     * Service Instance is not empty when delete. Message: Cannot delete the
-     * ServiceInstance is not empty.
+     * Service Instance is not empty when being deleted. Message: Cannot delete the
+     * ServiceInstance that is not empty.
      */
     SERVICE_INSTANCE_NOT_EMPTY_IN_DELETE("500.3"),
 
     /**
-     * Metadata key is not empty when delete. Message: Cannot delete the
-     * MetadatKey is not empty.
+     * Metadata key is not empty when being deleted. Message: Cannot delete the
+     * MetadatKey that is not empty.
      */
     METADATA_KEY_NOT_EMPTY_IN_DELETE("500.4"),
 
@@ -148,15 +148,15 @@ public enum ErrorCode {
     UPDATE_MONITOR_ENABLED_ERROR("500.7"),
 
     /**
-     * The Directory API doesn't own the updated moitorEnabled
-     * ProvidedServiceInstance. Message: The Directory API doesn't own the
-     * updated monitorEnabled ProvidedServiceInstance.
+     * The Directory API doesn't own the moitorEnabled
+     * ProvidedServiceInstance and can not update it. Message: The Directory API doesn't
+     * own the ProvidedServiceInstance.
      */
     ILLEGAL_SERVICE_INSTANCE_OWNER_ERROR("500.8"),
 
     /**
      * Invoke the ServiceDirectory while it shutdown. Message: The
-     * ServiceDirectory already shutdown.
+     * ServiceDirectory already shut down.
      */
     SERVICE_DIRECTORY_IS_SHUTDOWN("500.10"),
 
diff --git a/1.1/sd-core/src/main/java/com/cisco/oss/foundation/directory/exception/ServiceDirectoryError.java b/1.1/sd-core/src/main/java/com/cisco/oss/foundation/directory/exception/ServiceDirectoryError.java
index a6a4a4a..6c8d8e6 100644
--- a/1.1/sd-core/src/main/java/com/cisco/oss/foundation/directory/exception/ServiceDirectoryError.java
+++ b/1.1/sd-core/src/main/java/com/cisco/oss/foundation/directory/exception/ServiceDirectoryError.java
@@ -22,8 +22,8 @@ import org.codehaus.jackson.annotate.JsonIgnore;
 /**
  * The official ServiceDirectory ERROR.
  *
- * This error will throw to upper Application in Exception. Application can do
- * recovering according to the ExceptionCode if required.
+ * This error will be thrown to upper Application in Exception. Application can do
+ * recovery based on the ExceptionCode if desired.
  *
  * @author zuxiang
  *
diff --git a/1.1/sd-core/src/main/java/com/cisco/oss/foundation/directory/exception/ServiceException.java b/1.1/sd-core/src/main/java/com/cisco/oss/foundation/directory/exception/ServiceException.java
index a792593..5b84e6a 100644
--- a/1.1/sd-core/src/main/java/com/cisco/oss/foundation/directory/exception/ServiceException.java
+++ b/1.1/sd-core/src/main/java/com/cisco/oss/foundation/directory/exception/ServiceException.java
@@ -16,10 +16,10 @@
 package com.cisco.oss.foundation.directory.exception;
 
 /**
- * The sub RuntimeException to wrap ServiceDirectory fails and errors.
+ * The sub RuntimeException to wrap ServiceDirectory failure and errors.
  *
- * The ServiceException has the ExceptionCode to category the certain error
- * type.
+ * The ServiceException has the ExceptionCode to categorize certain error
+ * types.
  *
  * @author zuxiang
  *
diff --git a/1.1/sd-core/src/main/java/com/cisco/oss/foundation/directory/exception/ServiceRuntimeException.java b/1.1/sd-core/src/main/java/com/cisco/oss/foundation/directory/exception/ServiceRuntimeException.java
index 59e63b6..d9fb147 100644
--- a/1.1/sd-core/src/main/java/com/cisco/oss/foundation/directory/exception/ServiceRuntimeException.java
+++ b/1.1/sd-core/src/main/java/com/cisco/oss/foundation/directory/exception/ServiceRuntimeException.java
@@ -19,9 +19,9 @@ package com.cisco.oss.foundation.directory.exception;
  * It is the unchecked Exception used in Directory API.
  *
  * The LookupManager and RegistrationManager will capture this Exception and
- * convert it to the ServiceException to reminder high Application. So all
- * Exception that cannot handle in ServiceDirectory should extends this
- * exception, it will throw to the high Application.
+ * convert it to the ServiceException. Exceptions that cannot be handled in 
+ * ServiceDirectory should extends this exception, it will be thrown to the 
+ * higher layer Application.
  *
  * @author zuxiang
  *
diff --git a/1.1/sd-core/src/main/java/com/cisco/oss/foundation/directory/utils/HttpResponse.java b/1.1/sd-core/src/main/java/com/cisco/oss/foundation/directory/utils/HttpResponse.java
index d0a2b33..464a320 100644
--- a/1.1/sd-core/src/main/java/com/cisco/oss/foundation/directory/utils/HttpResponse.java
+++ b/1.1/sd-core/src/main/java/com/cisco/oss/foundation/directory/utils/HttpResponse.java
@@ -16,7 +16,7 @@
 package com.cisco.oss.foundation.directory.utils;
 
 /**
- * The wrapper to the HttpResponse.
+ * HttpResponse wrapper class
  *
  * @author zuxiang
  *
diff --git a/1.1/sd-core/src/main/java/com/cisco/oss/foundation/directory/utils/HttpUtils.java b/1.1/sd-core/src/main/java/com/cisco/oss/foundation/directory/utils/HttpUtils.java
index 8da75ab..498640d 100644
--- a/1.1/sd-core/src/main/java/com/cisco/oss/foundation/directory/utils/HttpUtils.java
+++ b/1.1/sd-core/src/main/java/com/cisco/oss/foundation/directory/utils/HttpUtils.java
@@ -31,7 +31,7 @@ import com.google.common.io.ByteStreams;
 import com.google.common.io.CharStreams;
 
 /**
- * Convenient Http Client util methods to invoke remote REST Service.
+ * Convenient Http Client util methods to invoke remote RESTful Service.
  *
  * @author zuxiang
  *
diff --git a/1.1/sd-core/src/main/java/com/cisco/oss/foundation/directory/utils/JsonSerializer.java b/1.1/sd-core/src/main/java/com/cisco/oss/foundation/directory/utils/JsonSerializer.java
index 453c99e..a0bfe92 100644
--- a/1.1/sd-core/src/main/java/com/cisco/oss/foundation/directory/utils/JsonSerializer.java
+++ b/1.1/sd-core/src/main/java/com/cisco/oss/foundation/directory/utils/JsonSerializer.java
@@ -25,9 +25,9 @@ import org.codehaus.jackson.map.ObjectMapper;
 import org.codehaus.jackson.type.TypeReference;
 
 /**
- * The JSON parser for serializing and deserializing.
+ * The JSON parser for serialization and deserialization.
  *
- * It wrap the Jackson ObjectMapper to handle the JSON parsing.
+ * It wraps the Jackson ObjectMapper to handle the JSON parsing.
  *
  * @author zuxiang
  *
diff --git a/1.1/sd-core/src/main/java/com/cisco/oss/foundation/directory/utils/ServiceInstanceUtils.java b/1.1/sd-core/src/main/java/com/cisco/oss/foundation/directory/utils/ServiceInstanceUtils.java
index ec26acb..77cfe98 100644
--- a/1.1/sd-core/src/main/java/com/cisco/oss/foundation/directory/utils/ServiceInstanceUtils.java
+++ b/1.1/sd-core/src/main/java/com/cisco/oss/foundation/directory/utils/ServiceInstanceUtils.java
@@ -211,7 +211,7 @@ public class ServiceInstanceUtils {
 		}
 
         Map<String, String> metadata = serviceInstance.getMetadata();
-        if (metadata != null && metadata.size() > 0) {
+        if (metadata != null && metadata.size() > 0 ) {
             Iterator<Entry<String, String>> itor = metadata.entrySet()
                     .iterator();
             while (itor.hasNext()) {
diff --git a/1.1/sd-core/src/main/resources/errorcode_en_US.properties b/1.1/sd-core/src/main/resources/errorcode_en_US.properties
index ac50c5f..aab3c7a 100644
--- a/1.1/sd-core/src/main/resources/errorcode_en_US.properties
+++ b/1.1/sd-core/src/main/resources/errorcode_en_US.properties
@@ -25,7 +25,7 @@
 500.5=The remote Directory Server error: {0}
 500.6=The HttpClient error: {0}
 500.7=The monitorEnabled field in ProvidedServiceInstance is not allowed to be updated.
-500.8=The Directory API does not own the updated moitorEnabled ProvidedServiceInstance.
+500.8=The Directory API does not own the ProvidedServiceInstance.
 500.9=Can not register the monitor disabled ProvidedServiceInstance with ServiceInstanceHealth.
-500.10=The ServiceDirectory already shutdown.
+500.10=The ServiceDirectory already shut down.
 500.11=The ServiceDirectoryManagerFactory already closed.
\ No newline at end of file
